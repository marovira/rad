name: Release

on:
  push:
    tags:
      - "*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
  build:
    name: ${{ matrix.config.preset }}
    runs-on: ${{ matrix.config.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: "windows-latest", cxx: "msvc", cc: "msvc", preset: "msvc"}
          - {os: "windows-latest", cxx: "msvc", cc: "msvc", preset: "msvc-onnx"}
          - {os: "windows-latest", cxx: "msvc", cc: "msvc", preset: "msvc-onnx-dml"}
          - {os: "ubuntu-24.04", cxx: "g++-14", cc: "gcc-14", preset: "gcc"}
          - {os: "ubuntu-24.04", cxx: "g++-14", cc: "gcc-14", preset: "gcc-onnx"}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@5
        with:
          python-version: "3.12"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install Python dependencies
        shell: bash
        run: |
          uv sync --locked

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: ~/deps
          key: deps_${{ matrix.config.os }}_${{ hashfiles('dependencies.txt') }}

      - name: Build dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        shell: bash
        env:
          BUILD_TYPE: ${{ matrix.build }}
        run: |
          if [[ "$OSTYPE" == "msys" ]]; then
            uv run tools/build_dependencies.py ~/deps -c
          else
            # Clang and GCC binaries are compatible, so only compile with GCC.
            export CC="gcc-14"
            export CXX="g++-14"
            uv run tools/build_dependencies.py ~/deps -c
          fi

      - name: Build RAD
        shell: bash
        env:
          BUILD_TYPE: Release
          CONFIG_TYPE: ${{ matrix.config.preset }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          cmake --preset=$CONFIG_TYPE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBUILD_SHARED_LIBS=OFF -DCMAKE_PREFIX_PATH=~/deps -DCMAKE_INSTALL_PREFIX=install/rad -DRAD_INSTALL_TARGET=ON
          cd ./build
          cmake --build . --config $BUILD_TYPE

      - name: Run tests
        shell: bash
        working-directory: ./build
        env:
          BUILD_TYPE: Release
          CONFIG_TYPE: ${{ matrix.config.preset }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          if [[ "$OSTYPE" == "msys" ]]; then
            cmake --build . --target RUN_TESTS --config $BUILD_TYPE
          else
            make test
          fi

      - name: Install
        shell: bash
        working-directory: ./build
        env:
          BUILD_TYPE: Release
          CONFIG_TYPE: ${{ matrix.config.preset }}
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}
        run: |
          if [[ "$OSTYPE" == "msys" ]]; then
            cmake --build . --target INSTALL --config $BUILD_TYPE
          else
            make install
          fi

      - name: Package
        shell: bash
        working-directory: ./install
        env:
          CONFIG_TYPE: ${{ matrix.config.preset }}
        run: |
          if [[ "$OSTYPE" == "msys" ]]; then
            7z a rad-$GITHUB_REF_NAME-$CONFIG_TYPE-x64.zip -r rad
          else
            zip rad-$GITHUB_REF_NAME-$CONFIG_TYPE-x64.zip -r rad
          fi

      - name: Publish
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: "./install/*.zip"
